version: 2.1
jobs:
  build:
    docker:
      - image: node:18.18.2
        auth:
          username: $DOCKERHUB_USR
          password: $DOCKERHUB_PWD
    steps:
      - checkout
      - run:
          name: Node Packages Download
          command: npm install
      - run:
          name: Project Build
          command: npm run build
      - run:
          name: Node CI Packages Download (No optionals)
          command: cd ./build && npm ci --production --no-optional
      - add_ssh_keys
  deploy:
    docker:
      - image: node:18.18.2
        auth:
          username: $DOCKERHUB_USR
          password: $DOCKERHUB_PWD
    steps:
      - checkout
      - run:
          name: Node Packages Download
          command: npm install
      - run:
          name: Project Build
          command: npm run build
      - run:
          name: Node CI Packages Download (No optionals)
          command: cd ./build && npm ci --production --no-optional
      - add_ssh_keys
      - run:
          name: Generate Artifact & Deploy
          command: |
            apt-get update && apt-get -y install rsync
            mkdir /tmp/artifacts
            tar -czf /tmp/build.tar.gz ./build
            ssh-keyscan -H $PRD_SERVER >> ~/.ssh/known_hosts
            rsync -va --delete /tmp/build.tar.gz $PRD_USR@$PRD_SERVER:$PRD_PATH
            ssh $PRD_USR@$PRD_SERVER \<<'ENDSSH'
            cd /root/circleci-folder
            rm -rf ./build
            tar -xf build.tar.gz
            cd build
            node ace migration:run
            pm2 restart 0
            ENDSSH
      - store_artifacts:
          path: /tmp/build.tar.gz
          destination: artifact-file

workflows:
  build_only:
    when:
      and:
        - not:
            equal:  [ main, << pipeline.git.branch >> ]
    jobs:
      - build
  build_and_deploy:
    when:
      equal: [ main, << pipeline.git.branch >> ]
    jobs:
      - deploy
